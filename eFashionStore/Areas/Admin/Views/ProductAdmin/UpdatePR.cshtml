@model eFashionStore.Models.SanPham
@{
    ViewBag.Title = "UpdateProduce";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
<main id="main" class="main">
    <div class="pagetitle">
        <h1>Edit product</h1>
        <nav>
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="@Url.Action("Index","HomeAdmin")">Home</a></li>
                <li class="breadcrumb-item active">Edit product</li>
            </ol>
        </nav>
    </div><!-- End Page Title -->
    <section class="section dashboard" style="background-color: white; padding: 20px; border-radius: 20px; box-shadow: 0 10px 10px rgba(0, 0, 0, 0.1); margin-bottom: 20px;">
        @using (Html.BeginForm("UpdatePR", "ProductAdmin", FormMethod.Post))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.MaSP)

                <div class="form-group">
                    <div class="form-floating mb-3">
                        @Html.TextBoxFor(model => model.TenSP, new { @class = "form-control", @id = "floatingInputName", placeholder = "Enter product name", @required = "required" })
                        @Html.Label("Product name: ", new { @class = "form-label" })
                        @Html.ValidationMessageFor(model => model.TenSP, "Please enter product name!", new { @class = "invalid-feedback" })
                    </div>
                </div>

                <div class="form-floating mb-3">
                    @Html.TextBoxFor(model => model.Hinh, new { @class = "form-control", @id = "floatingInputImage", @placeholder = "Enter image link", @required = "required" })
                    @Html.Label("Image link:", new { @class = "form-label" })
                    @Html.ValidationMessageFor(model => model.Hinh, "Please enter the image link!", new { @class = "invalid-feedback" })
                </div>

                <div class="form-floating mb-3">
                    @Html.TextBoxFor(model => model.MoTa, new { @class = "form-control", @id = "floatingDescriptionInput", @placeholder = "Enter description" })
                    @Html.Label("Describe:", new { @class = "form-label" })
                    @Html.ValidationMessageFor(model => model.MoTa, "", new { @class = "text-danger" })
                </div>

                <div class="form-floating mb-3">
                    @Html.DropDownListFor(model => model.TonKho, new SelectList(
                        new List<SelectListItem>
                        {
                            new SelectListItem { Text = "In stock", Value = "true" },
                            new SelectListItem { Text = "Out of stock", Value = "false" }
                        }, "Value", "Text"), new { @class = "form-select", @id = "floatingStatusSelect" })
                    @Html.Label("Inventory status:", new { @class = "form-label" })
                    @Html.ValidationMessageFor(model => model.TonKho, "Please select inventory status!", new { @class = "invalid-feedback" })
                </div>

                <div class="form-floating mb-3">
                    @Html.TextBoxFor(model => model.SoLuong, new { @class = "form-control", @id = "floatingStockInput", @type = "number", @placeholder = "Enter quantity", @required = "required" })
                    @Html.Label("Quantity:", new { @class = "form-label" })
                    @Html.ValidationMessageFor(model => model.SoLuong, "Please enter product quantity!", new { @class = "invalid-feedback" })
                </div>

                <div class="form-floating mb-3">
                    @Html.TextBoxFor(model => model.Gia, new { @class = "form-control", @id = "floatingPriceInput", @placeholder = "Enter price", @required = "required", @type = "number" })
                    @Html.Label("Product price:", new { @class = "form-label" })
                    @Html.ValidationMessageFor(model => model.Gia, "Please enter product price!", new { @class = "invalid-feedback" })
                </div>

                <div class="form-floating mb-3">
                    @Html.DropDownListFor(model => model.MaLoai, (SelectList)ViewBag.tenLoaiList, new { @class = "form-select", @id = "floatingCategorySelect", @required = "required" })
                    @Html.Label("Product type:", new { @class = "form-label" })
                    @Html.ValidationMessageFor(model => model.MaLoai, "Please select product type!", new { @class = "invalid-feedback" })
                </div>

                <div class="d-grid gap-2 col-6 mx-auto">
                    <button class="btn btn-primary" type="submit">Save and change</button>

                </div>
            </div>
        }

        <a href="@Url.Action("Index","HomeAdmin")" style="text-decoration:none;font-size:15px;color:black;margin-left:20px;">
            <i class="fa-solid fa-backward"></i>  Back to list
        </a>
    </section>
</main>


